-- CONSTANTS

local VELOCITY = 500
local SCREEN_WIDTH = 960
local DELAY = 1
-- HASHES

-- 	Inputs hash
local MOVE_LEFT = hash("move_left")
local MOVE_RIGHT = hash("move_right")
local FIRE = hash("fire")

function init(self)
	msg.post(".", "acquire_input_focus")
	self.direction = vmath.vector3()
	self.width = go.get("#sprite", "size.x")
	self.delay_fire = 0
	self.firing = false
end

function final(self)

end

function update(self, dt)
	-- update timer delay_fire
	self.delay_fire = self.delay_fire - dt
	if self.delay_fire < 0 then
		self.delay_fire = 0
	end

	-- Update position
	local position = go.get_position()
	position.x = position.x + (self.direction.x * VELOCITY * dt)

	-- reset position is > than screen.x or < than 0
	local center_x = self.width / 2
	if position.x - center_x  < 0 then
		position.x = 0 + center_x
	elseif position.x + center_x > SCREEN_WIDTH then
		position.x = SCREEN_WIDTH - center_x
	end
	
	go.set_position(position)

	-- check if player is firing
	if self.firing and self.delay_fire == 0 then
		factory.create("/factories#laser_factory", vmath.vector3(position.x, position.y + 15, position.z))
		self.delay_fire = DELAY
	end

	-- Reset direction and firing
	self.direction = vmath.vector3()
	self.firing = false
end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	if action_id == MOVE_LEFT then
		self.direction.x = -1
	elseif action_id == MOVE_RIGHT then
		self.direction.x = 1
	elseif action_id == FIRE and action.pressed then
		self.firing = true
	end
end

function on_reload(self)

end
